---
#引入PHP运行环境元数据，并初始化
- include_vars: roles/role_php/vars/php_runtime_meta.yml

#Modify var for this playbook
- set_fact:
    magento_vhost_dir: "{{php_runtime_meta[ansible_os_family][magento_webs].vhost_dir}}"
    magento_vhost_src: "{{php_runtime_meta[ansible_os_family][magento_webs].vhost_src}}"
    magento_service: "{{php_runtime_meta[ansible_os_family][magento_webs].service}}"
    magento_owner: "{{php_runtime_meta[ansible_os_family][magento_webs].owner}}"
    magento_db_password: "{{mysql_root_password}}"

- debug:
    msg: runtime {{ magento_vhost_dir }}, {{magento_vhost_src}}, {{magento_service}}, {{magento_owner}}, {{magento_webs}}, {{ansible_distribution}}

# Magento
- name: Create Magento User
  user:
    name: magento
    shell: /bin/bash
    
- name: Remove extra dir
  shell: rm -rf /data/wwwroot/*{{magento_name}}*

- name: Create app folder dir
  file: 
    path: /data/wwwroot/{{magento_name}}
    state: directory
    mode: 0750

- name: Create composer dir
  file: 
    path: /root/.config/composer
    state: directory
    recurse: yes

- name: Setfacl for Magento own /usr/bin/composer
  shell: |
    setfacl -m u:magento:rx /usr/bin/composer
    setfacl -m u:magento:rw -R /data/wwwroot/magento

- name: Upload composer authentication keys to root
  template:
    src: auth.json
    dest: /root/.config/composer/auth.json

- name: Create Magento site by composer, -n for interaction
  shell: composer create-project --repository=https://repo.magento.com/ magento/project-community-edition /data/wwwroot/magento -n

- name: Rename dir name
  shell: cd /data/wwwroot; if [ ! -d "{{magento_name}}" ]; then mv *{{magento_name}}* {{magento_name}}; fi

- name: Set pub/static pub/media app/etc permission
  shell: |
    cd /data/wwwroot/magento
    find var generated vendor pub/static pub/media app/etc -type f -exec chmod g+w {} +
    find var generated vendor pub/static pub/media app/etc -type d -exec chmod g+ws {} +
    chmod u+x bin/magento

- block:
  - name: Copy the magento_install_sample.sh
    template:
      src: magento_install_sample.sh
      dest: /tmp/magento_install_sample.sh

  - name: Run the script install sample data
    shell: bash /tmp/magento_install_sample.sh

  when: magento_install_sample

- name: Install magento by magento setup cli
  shell: |
    internet_ip=`curl ifconfig.me`
    ./magento setup:install --base-url=http://$internet_ip \
    --db-host=localhost --db-name=magento --db-user=magento --db-password={{magento_db_password}} \ --admin-firstname=xu --admin-lastname=way --admin-email=help@websoft9.com --admin-user={{magento_admin_username}} --admin-password={{magento_admin_password}} \
    --language=en_US --currency=USD --timezone=America/Chicago --use-rewrites=1 \
    --search-engine=elasticsearch7 --elasticsearch-host=127.0.0.1 --elasticsearch-port={{magento_elasticsearch_port}}
    ./magento setup:config:set --backend-frontname=admin -n
    php /data/wwwroot/magento/bin/magento module:disable Magento_TwoFactorAuth
    ./magento cron:install --force
    ./magento cron:run --group default
    ./magento indexer:reindex
  args:
    chdir: /data/wwwroot/magento/bin

- name: Remove default language dir
  file:
    path: /data/wwwroot/magento/vendor/magento/language-zh_hans_cn/
    state: absent

- name: Download language package
  unarchive:
    src: "{{ magento_package_cn }}"
    dest: /data/wwwroot/magento/vendor/magento/
    remote_src: yes

# 系统通用
- name: Set permission, bin/magento file permission must be 0750 because CLI need x permission
  shell: |
    find /data/wwwroot -type d -exec chmod 750 {} \;
    find /data/wwwroot -not -type d -exec chmod 640 {} \;
    chmod 750 /data/wwwroot/magento/bin/magento 
    chown -R {{magento_owner}}:{{magento_owner}} /data/wwwroot

# 根据不同的基础环境分别处理
- block:
  - name: Copy nginx virtual host configure
    template:
      src: default.conf.jinja2
      dest: '{{ magento_vhost_dir }}'
    force: yes
    when: magento_service is nginx 

  - name: restart php-fpm
    service: name=php-fpm state=restarted

  - name: restart {{ magento_service }}
    service: name={{ magento_service }} state=restarted

# Check version,
- block:
  - name: Check magento Version
    shell: sudo echo "magento version:" $(cat /data/wwwroot/magento/composer.json |grep version |cut -d'"' -f 4) |sudo tee -a /data/logs/install_version.txt